<?xml version='1.0' encoding='UTF-8'?>
<ResultsSession buildId="CICD_JavaProjectTemplate-2023-09-19" climode="true" execEnv="win32_x86_64" hasViols="true" id="1696385757181" lang="en_US" machine="CD-TREN" prjModule="com.parasoft:project-with-default-package" project="CICD_JavaProjectTemplate" scBranch="main" tag="DTP Recommended Rules-com.parasoft:project-with-default-package-main-win32_x86_64" time="2023-09-19T14:48:35+08:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="2022.2.0" user="arenc">
   <TestConfig machine="CD-TREN" name="DTP Recommended Rules" pseudoUrl="jtest.dtp://DTP Recommended Rules" user="arenc" />
   <Authors>
      <Author id="dev1" name="Roller Wang" />
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.6.1.20221028B3817" />
      <Analyzer id="com.parasoft.jtest.mlearning" name="machinelearning" ver="10.6.1.20221030" />
      <Analyzer id="com.parasoft.jtest.globals.ioc.springxml.analyzer.IOCAnalyzer" name="Parasoft IOC Analyzer" ver="10.6.1.20221030" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.xml" name="Parasoft XML Static Analyzer" ver="10.6.1.20221030" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.java" name="Parasoft Java Static Analyzer" ver="10.6.1.20221030" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.prop" name="Parasoft Properties Static Analyzer" ver="10.6.1.20221030" />
      <Analyzer id="com.parasoft.jtest.standards.metrics.analyzer" name="Parasoft Metrics Analyzer" ver="10.6.1.20221030" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.rulewizard" name="Parasoft RuleWizard Static Analyzer" ver="10.6.1.20221030" />
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1" />
   </VersionInfos>
   <Goals tsks="1">
      
   </Goals>
   <Metrics>
      <Metric avg="0.545" disp="true" id="METRIC.CBO" max="2" min="0" name="Coupling Between Objects" noi="11" stddev="0.782">
         <Info avg="0.545" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="11" stddev="0.782" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.CC" max="1" min="1" name="McCabe Cyclomatic Complexity" noi="17" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="17" stddev="0" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIF" max="0" min="0" name="Comment/Logical Lines in Files" noi="5" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="5" stddev="0" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIM" max="0" min="0" name="Comment/Logical Lines in Methods" noi="15" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="15" stddev="0" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.CLLOCRIT" max="0" min="0" name="Comment/Logical Lines in Types" noi="7" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="7" stddev="0" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.ECC" max="1" min="1" name="Essential Cyclomatic Complexity" noi="17" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="17" stddev="0" />
      </Metric>
      <Metric avg="0.556" disp="true" id="METRIC.FO" max="2" min="0" name="Fan Out" noi="9" stddev="0.685">
         <Info avg="0.556" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="9" stddev="0.685" />
      </Metric>
      <Metric avg="3.014" disp="true" id="METRIC.HDIFM" max="7" min="0.5" name="Halstead Difficulty" noi="17" stddev="1.531">
         <Info avg="3.014" disp="true" elem="com.parasoft:project-with-default-package" max="7" min="0.5" noi="17" stddev="1.531" />
      </Metric>
      <Metric avg="140.225" disp="true" id="METRIC.HEFM" max="586.333" min="2.377" name="Halstead Effort" noi="17" stddev="134.55">
         <Info avg="140.225" disp="true" elem="com.parasoft:project-with-default-package" max="586.333" min="2.377" noi="17" stddev="134.55" />
      </Metric>
      <Metric avg="12.464" disp="true" id="METRIC.HICM" max="21.051" min="8.242" name="Halstead Intelligent Content" noi="17" stddev="3.925">
         <Info avg="12.464" disp="true" elem="com.parasoft:project-with-default-package" max="21.051" min="8.242" noi="17" stddev="3.925" />
      </Metric>
      <Metric avg="11.353" disp="true" id="METRIC.HLENM" max="22" min="3" name="Halstead Program Length" noi="17" stddev="4.982">
         <Info avg="11.353" disp="true" elem="com.parasoft:project-with-default-package" max="22" min="3" noi="17" stddev="4.982" />
      </Metric>
      <Metric avg="0.532" disp="true" id="METRIC.HLEVM" max="2" min="0.143" name="Halstead Program Level" noi="17" stddev="0.545">
         <Info avg="0.532" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0.143" noi="17" stddev="0.545" />
      </Metric>
      <Metric avg="0.008" disp="true" id="METRIC.HNOBM" max="0.023" min="0.001" name="Halstead Number of Bugs" noi="17" stddev="0.005">
         <Info avg="0.008" disp="true" elem="com.parasoft:project-with-default-package" max="0.023" min="0.001" noi="17" stddev="0.005" />
      </Metric>
      <Metric avg="7.79" disp="true" id="METRIC.HTTPM" max="32.574" min="0.132" name="Halstead Time to Program" noi="17" stddev="7.475">
         <Info avg="7.79" disp="true" elem="com.parasoft:project-with-default-package" max="32.574" min="0.132" noi="17" stddev="7.475" />
      </Metric>
      <Metric avg="9.176" disp="true" id="METRIC.HVOCM" max="14" min="3" name="Halstead Program Vocabulary" noi="17" stddev="2.975">
         <Info avg="9.176" disp="true" elem="com.parasoft:project-with-default-package" max="14" min="3" noi="17" stddev="2.975" />
      </Metric>
      <Metric avg="37.781" disp="true" id="METRIC.HVOLM" max="83.762" min="4.755" name="Halstead Program Volume" noi="17" stddev="20.535">
         <Info avg="37.781" disp="true" elem="com.parasoft:project-with-default-package" max="83.762" min="4.755" noi="17" stddev="20.535" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.IDOC" max="1" min="1" name="Inheritance Depth of Class" noi="6" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="6" stddev="0" />
      </Metric>
      <Metric avg="0.023" disp="true" id="METRIC.LCOM" max="0.25" min="0" name="Lack of Cohesion" noi="11" stddev="0.072">
         <Info avg="0.023" disp="true" elem="com.parasoft:project-with-default-package" max="0.25" min="0" noi="11" stddev="0.072" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.MCC" max="1" min="1" name="Modified Cyclomatic Complexity" noi="17" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="17" stddev="0" />
      </Metric>
      <Metric avg="131.02" disp="true" id="METRIC.MI" max="133.922" min="121.719" name="Maintainability Index" noi="6" stddev="4.201">
         <Info avg="131.02" disp="true" elem="com.parasoft:project-with-default-package" max="133.922" min="121.719" noi="6" stddev="4.201" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NBD" max="0" min="0" name="Nested Blocks Depth" noi="17" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="17" stddev="0" />
      </Metric>
      <Metric avg="4.333" disp="true" id="METRIC.NOBLIF" max="12" min="1" name="Blank Lines in Files" noi="6" stddev="3.815">
         <Info avg="4.333" disp="true" elem="com.parasoft:project-with-default-package" max="12" min="1" noi="6" stddev="3.815" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOBLIM" max="0" min="0" name="Blank Lines in Methods" noi="17" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="17" stddev="0" />
      </Metric>
      <Metric avg="1.545" disp="true" id="METRIC.NOBLIT" max="6" min="0" name="Blank Lines in Types" noi="11" stddev="1.924">
         <Info avg="1.545" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="11" stddev="1.924" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOC" max="1" min="1" name="Number of Classes" noi="6" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="6" stddev="0" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIF" max="0" min="0" name="Comment Lines in Files" noi="6" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="6" stddev="0" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIM" max="0" min="0" name="Comment Lines in Methods" noi="17" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="17" stddev="0" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOCLIT" max="0" min="0" name="Comment Lines in Types" noi="11" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="11" stddev="0" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOF" max="1" min="1" name="Number of Files" noi="6" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="6" stddev="0" />
      </Metric>
      <Metric avg="3.667" disp="true" id="METRIC.NOLLOCIF" max="9" min="0" name="Logical Lines in Files" noi="6" stddev="3.037">
         <Info avg="3.667" disp="true" elem="com.parasoft:project-with-default-package" max="9" min="0" noi="6" stddev="3.037" />
      </Metric>
      <Metric avg="1.235" disp="true" id="METRIC.NOLLOCIM" max="3" min="0" name="Logical Lines in Methods" noi="17" stddev="0.73">
         <Info avg="1.235" disp="true" elem="com.parasoft:project-with-default-package" max="3" min="0" noi="17" stddev="0.73" />
      </Metric>
      <Metric avg="2" disp="true" id="METRIC.NOLLOCIT" max="8" min="0" name="Logical Lines in Types" noi="11" stddev="2.335">
         <Info avg="2" disp="true" elem="com.parasoft:project-with-default-package" max="8" min="0" noi="11" stddev="2.335" />
      </Metric>
      <Metric avg="1.545" disp="true" id="METRIC.NOMIT" max="6" min="0" name="Number of Methods in Types" noi="11" stddev="1.559">
         <Info avg="1.545" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="11" stddev="1.559" />
      </Metric>
      <Metric avg="0.588" disp="true" id="METRIC.NOPAR" max="2" min="0" name="Parameters of Methods" noi="17" stddev="0.771">
         <Info avg="0.588" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="17" stddev="0.771" />
      </Metric>
      <Metric avg="19.5" disp="true" id="METRIC.NOPLIF" max="50" min="5" name="Physical Lines in Files" noi="6" stddev="15.349">
         <Info avg="19.5" disp="true" elem="com.parasoft:project-with-default-package" max="50" min="5" noi="6" stddev="15.349" />
      </Metric>
      <Metric avg="3.118" disp="true" id="METRIC.NOPLIM" max="5" min="1" name="Physical Lines in Methods" noi="17" stddev="0.963">
         <Info avg="3.118" disp="true" elem="com.parasoft:project-with-default-package" max="5" min="1" noi="17" stddev="0.963" />
      </Metric>
      <Metric avg="8.909" disp="true" id="METRIC.NOPLIT" max="30" min="3" name="Physical Lines in Types" noi="11" stddev="7.465">
         <Info avg="8.909" disp="true" elem="com.parasoft:project-with-default-package" max="30" min="3" noi="11" stddev="7.465" />
      </Metric>
      <Metric avg="0.364" disp="true" id="METRIC.NOPRIVMIT" max="2" min="0" name="Private Members of Types" noi="11" stddev="0.643">
         <Info avg="0.364" disp="true" elem="com.parasoft:project-with-default-package" max="2" min="0" noi="11" stddev="0.643" />
      </Metric>
      <Metric avg="0" disp="true" id="METRIC.NOPROTMIT" max="0" min="0" name="Protected Members of Types" noi="11" stddev="0">
         <Info avg="0" disp="true" elem="com.parasoft:project-with-default-package" max="0" min="0" noi="11" stddev="0" />
      </Metric>
      <Metric avg="2.273" disp="true" id="METRIC.NOPUBMIT" max="6" min="0" name="Public Members of Types" noi="11" stddev="1.763">
         <Info avg="2.273" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="11" stddev="1.763" />
      </Metric>
      <Metric avg="0.588" disp="true" id="METRIC.NORET" max="1" min="0" name="Number of Returns in Methods" noi="17" stddev="0.492">
         <Info avg="0.588" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="0" noi="17" stddev="0.492" />
      </Metric>
      <Metric avg="15.167" disp="true" id="METRIC.NOSLIF" max="38" min="4" name="Source Lines in Files" noi="6" stddev="11.539">
         <Info avg="15.167" disp="true" elem="com.parasoft:project-with-default-package" max="38" min="4" noi="6" stddev="11.539" />
      </Metric>
      <Metric avg="3.118" disp="true" id="METRIC.NOSLIM" max="5" min="1" name="Source Lines in Methods" noi="17" stddev="0.963">
         <Info avg="3.118" disp="true" elem="com.parasoft:project-with-default-package" max="5" min="1" noi="17" stddev="0.963" />
      </Metric>
      <Metric avg="7.364" disp="true" id="METRIC.NOSLIT" max="24" min="3" name="Source Lines in Types" noi="11" stddev="5.82">
         <Info avg="7.364" disp="true" elem="com.parasoft:project-with-default-package" max="24" min="3" noi="11" stddev="5.82" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.NOT" max="1" min="1" name="Number of Types" noi="11" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="11" stddev="0" />
      </Metric>
      <Metric avg="2.182" disp="true" id="METRIC.RFC" max="7" min="0" name="Response for Class" noi="11" stddev="1.946">
         <Info avg="2.182" disp="true" elem="com.parasoft:project-with-default-package" max="7" min="0" noi="11" stddev="1.946" />
      </Metric>
      <Metric avg="1" disp="true" id="METRIC.SCC" max="1" min="1" name="Strict Cyclomatic Complexity" noi="17" stddev="0">
         <Info avg="1" disp="true" elem="com.parasoft:project-with-default-package" max="1" min="1" noi="17" stddev="0" />
      </Metric>
      <Metric avg="1.545" disp="true" id="METRIC.WMC" max="6" min="0" name="Weighted Methods of Class" noi="11" stddev="1.559">
         <Info avg="1.545" disp="true" elem="com.parasoft:project-with-default-package" max="6" min="0" noi="11" stddev="1.559" />
      </Metric>
   </Metrics>
   <Scope>
      <Repositories>
         <Rep repRef="1" type="git" url="git@github.com:parasoft/parasoft-demo-app.git" />
      </Repositories>
      <Locations>
         <Loc branch="main" hash="1741334343" locRef="1" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" repRef="1" resProjPath="src/main/java/Calculator.java" rev="330c823b10d045b5307308e81e887fbad50ea376" scPath="src/main/java/Calculator.java" totLns="27" uri="file://CD-TREN/D:/github/JavaProjectTemplate/src/main/java/Calculator.java" />
         <Loc branch="main" hash="-662881149" locRef="2" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" repRef="1" resProjPath="src/main/java/com/parasoft/Convertor.java" rev="2fa4c935f38ad72de1990082b59417b1b197f73b" scPath="src/main/java/com/parasoft/Convertor.java" totLns="14" uri="file://CD-TREN/D:/github/JavaProjectTemplate/src/main/java/com/parasoft/Convertor.java" />
         <Loc branch="main" hash="469181545" locRef="3" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" repRef="1" resProjPath="src/main/java/com/parasoft/another/Convertor.java" rev="2fa4c935f38ad72de1990082b59417b1b197f73b" scPath="src/main/java/com/parasoft/another/Convertor.java" totLns="14" uri="file://CD-TREN/D:/github/JavaProjectTemplate/src/main/java/com/parasoft/another/Convertor.java" />
         <Loc branch="main" hash="-1706285489" locRef="4" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" repRef="1" resProjPath="src/main/java/com/parasoft/interfaces/IConvertor.java" rev="2fa4c935f38ad72de1990082b59417b1b197f73b" scPath="src/main/java/com/parasoft/interfaces/IConvertor.java" totLns="5" uri="file://CD-TREN/D:/github/JavaProjectTemplate/src/main/java/com/parasoft/interfaces/IConvertor.java" />
         <Loc branch="main" hash="1200206342" locRef="5" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" repRef="1" resProjPath="src/main/java/com/parasoft/interfaces2/ICalculator.java" rev="330c823b10d045b5307308e81e887fbad50ea376" scPath="src/main/java/com/parasoft/interfaces2/ICalculator.java" totLns="7" uri="file://CD-TREN/D:/github/JavaProjectTemplate/src/main/java/com/parasoft/interfaces2/ICalculator.java" />
         <Loc branch="main" hash="-1917579824" locRef="6" projId="com.parasoft:project-with-default-package" projPath="/com.parasoft:project-with-default-package" project="com.parasoft:project-with-default-package" repRef="1" resProjPath="src/main/java/com/parasoft/nested/PhoneFactory.java" rev="09fea3738404dc10533b81e53283806b17027f4b" scPath="src/main/java/com/parasoft/nested/PhoneFactory.java" totLns="50" uri="file://CD-TREN/D:/github/JavaProjectTemplate/src/main/java/com/parasoft/nested/PhoneFactory.java" />
      </Locations>
   </Scope>
   
  <SetupProblems>
    <Problem msg="Some rules in test configuration are not supported in current Jtest version" sev="1" totErrs="1" type="MissingRulesSetupProblem">
      <ErrorList>
        <Error val="JavaServer Pages [JSP]: All rules from category are not available" />
      </ErrorList>
    </Problem>
    <Problem msg="Configuration setup problems:" sev="1" totErrs="2" type="ConfigurationSetupProblem">
      <ErrorList>
        <Error val="The JMETRICS rule category is no longer available." />
        <Error val="The rule BD.PB.ARRAYINP has been renamed to BD.SECURITY.ARRAY." />
      </ErrorList>
    </Problem>
  </SetupProblems>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:03">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="6" checkedLns="117" id="com.parasoft:project-with-default-package" name="com.parasoft:project-with-default-package" qfixErrs="0" suppErrs="0" totErrs="1" totFiles="6" totLns="117" />
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="Flow Analysis" name="BD" rules="74" total="0">
               <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="BD.PB" rules="22" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Resources" name="BD.RES" rules="2" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="BD.TRS" rules="6" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Collections" name="BD.CO" rules="1" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Security" name="BD.SECURITY" rules="36" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Exceptions" name="BD.EXCEPT" rules="1" total="0" />
            </Category>
            <Category authTot="0;" authUrg="0;" desc="JavaBeans" name="BEAN" rules="5" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Code Duplication Detection" name="CDD" rules="6" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Coding Conventions" name="CODSTA" rules="112" total="0">
               <Category authTot="1;" authUrg="1;" desc="Organization" name="CODSTA.ORG" rules="15" total="1" />
               <Category authTot="0;" authUrg="0;" desc="Error-Prone Coding" name="CODSTA.EPC" rules="15" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Readability" name="CODSTA.READ" rules="39" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Overriding and Implementing Methods" name="CODSTA.OIM" rules="8" total="0" />
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Enterprise JavaBeans" name="EJB" rules="62" total="0">
               <Category authTot="0;" authUrg="0;" desc="Enterprise JavaBeans 3" name="EJB.EJB3" rules="19" total="0" />
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Exceptions" name="EXCEPT" rules="19" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Garbage Collection" name="GC" rules="12" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Hibernate Framework" name="HIBERNATE" rules="13" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Initialization" name="INIT" rules="14" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Java Database Connectivity" name="JDBC" rules="10" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Naming Conventions" name="NAMING" rules="38" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Object Oriented Programming" name="OOP" rules="35" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Optimization" name="OPT" rules="56" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="PB" rules="142" total="0">
               <Category authTot="0;" authUrg="0;" desc="Typographical Errors" name="PB.TYPO" rules="12" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Useless Code" name="PB.USC" rules="12" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Numerical Errors" name="PB.NUM" rules="17" total="0" />
               <Category authTot="0;" authUrg="0;" desc="API Usage and Implementation" name="PB.API" rules="25" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Logical Errors" name="PB.LOGIC" rules="18" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Confusing or Unintended Behavior" name="PB.CUB" rules="33" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Runtime Exceptions" name="PB.RE" rules="17" total="0" />
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Property Files" name="PROPS" rules="17" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Serialization" name="SERIAL" rules="18" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Servlets" name="SERVLET" rules="17" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Spring Framework" name="SPRING" rules="14" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Struts Framework" name="STRUTS" rules="30" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="TRS" rules="52" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Unused Code" name="UC" rules="28" total="0" />
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.CO" desc="Do not modify collection while iterating over it" id="BD.CO.ITMOD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.EXCEPT" desc="Avoid NullPointerException" id="BD.EXCEPT.NP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid use before explicit initialization" id="BD.PB.NOTEXPLINIT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid use of fields before initialization in constructors and static initializers" id="BD.PB.NOTINITCTOR" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid division by zero" id="BD.PB.ZERO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid accessing arrays out of bounds" id="BD.PB.ARRAY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.PB" desc="Avoid conditions that always evaluate to the same value" id="BD.PB.CC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.RES" desc="Do not use resources that have been freed" id="BD.RES.FREE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.RES" desc="Ensure resources are deallocated" id="BD.RES.LEAKS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against SQL injection" id="BD.SECURITY.TDSQL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.SECURITY" desc="Protect against XSS vulnerabilities" id="BD.SECURITY.TDXSS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not abandon unreleased locks" id="BD.TRS.LOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;" authUrg="0;" cat="BD.TRS" desc="Do not use blocking methods while holding a lock" id="BD.TRS.TSHL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="BEAN" desc="Use appropriate signatures for listener method names in JavaBean classes" id="BEAN.BLNC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid duplicate import statements" id="CDD.DUPI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Call 'super.clone()' in all 'clone()' methods" id="CODSTA.EPC.SCLONE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.EPC" desc="Do not use constructors in the 'clone()' method" id="CODSTA.EPC.CLNC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Use the 'clone()' method only to implement 'Cloneable' interface" id="CODSTA.OIM.CLONE2" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="CODSTA.OIM" desc="Ensure 'clone()' method of non-final Cloneable class declared to throw 'CloneNotSupportedException'" id="CODSTA.OIM.CLONET" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;" authUrg="1;" cat="CODSTA.ORG" desc="Ensure all types have a non default package name" id="CODSTA.ORG.UNDPN" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="CODSTA.READ" desc="Do not declare multiple variables of different types in one statement" id="CODSTA.READ.VDT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare bean classes &quot;public&quot;" id="EJB.CDP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare bean classes as &quot;abstract&quot;" id="EJB.CNDA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not declare bean classes as &quot;final&quot;" id="EJB.CNDF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare 'ejbCreate()' methods  &quot;public&quot;, but neither &quot;static&quot; nor &quot;final&quot;" id="EJB.CRTE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Implement a no-argument 'ejbCreate()' method for all Message-driven bean classes" id="EJB.MDBC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not define 'finalize()' method in bean classes" id="EJB.MNDF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare a &quot;public&quot; constructor that takes no parameters in bean classes" id="EJB.NFDC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare 'ejbPostCreate()' &quot;public&quot; and neither &quot;static&quot; nor &quot;final&quot;" id="EJB.PCRTE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Make the return type &quot;void&quot; for SessionBeans or MessageDrivenBeans' 'ejbCreate()' methods" id="EJB.RTC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Make the return type &quot;void&quot; for the 'ejbPostCreate()' method" id="EJB.RTP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid passing the &quot;this&quot; reference as an argument" id="EJB.THISARG" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not return &quot;this&quot;" id="EJB.THISRET" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not access or modify security configuration objects" id="EJB.AMSC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Declare all &quot;static&quot; fields in EJB bean classes &quot;final&quot;" id="EJB.NFS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="The return type of EJB finder methods should be the primary key or a collection of primary keys" id="EJB.RT" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Do not set or create a new SecurityManager in EJBs" id="EJB.SMSN" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB" desc="Avoid starting, stopping, or managing threads in any way in bean classes" id="EJB.THREAD" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EJB" desc="Do not throw 'java.rmi.RemoteException' in a bean's local interface and local home interface" id="EJB.RILH" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Call 'InvocationContext.proceed()' from @AroundInvoke methods" id="EJB.EJB3.CPIM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EJB.EJB3" desc="Ensure instance variables of @Stateful beans are Serializable" id="EJB.EJB3.SIVS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw exceptions from the constructors of exception classes" id="EXCEPT.TEFEC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Catch all &quot;Throwable&quot; objects which may be thrown in the body of certain methods" id="EXCEPT.CATO" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not abuse exceptions as flow control statements" id="EXCEPT.AEFC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not use instanceof in a catch block to check the exception type" id="EXCEPT.AIOC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Always chain thrown exceptions" id="EXCEPT.CTE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not use 'finalize()' methods to unregister listeners" id="GC.FM" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Do not call 'finalize()' explicitly" id="GC.NCF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'" id="GC.OSTM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Call 'super.finalize()' from 'finalize()'" id="GC.FCF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="GC" desc="Call 'super.finalize()' in the &quot;finally&quot; block of 'finalize()' methods" id="GC.IFF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="HIBERNATE" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="HIBERNATE.UPWD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid uninitialized reads of fields before or during constructor execution" id="INIT.UIRC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use a &quot;static&quot; initializer that creates an instance of the current class before all &quot;static final&quot; fields are assigned" id="INIT.SICUI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Avoid explicitly initializing fields which have already been initialized by a superclass' constructor" id="INIT.ADI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use initialization circularities for fields" id="INIT.IC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="INIT" desc="Do not use non-final &quot;static&quot; fields during the initialization" id="INIT.NFS" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="JDBC" desc="Ensure index is valid in JDBC method invocation" id="JDBC.BRSA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not declare types with the same name as types in the Java platform" id="NAMING.DJLO" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="NAMING" desc="Avoid using potential Java keywords as identifiers" id="NAMING.ID" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use a package name that is reserved by Sun" id="NAMING.RPKG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Avoid using dollar signs in names" id="NAMING.DSN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="NAMING" desc="Do not use variables with identical names or names that differ only in case" id="NAMING.UUVN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not hide inherited fields" id="OOP.AHF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OOP" desc="Do not hide inherited &quot;static&quot; member methods" id="OOP.AHSM" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Do not use a &quot;private&quot; field that is accessed in only one method; change it to a local variable" id="OPT.CTLV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Declare &quot;final&quot; fields with a known compile time value as &quot;static&quot;" id="OPT.NSF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="OPT" desc="Declare member classes &quot;static&quot; if possible" id="OPT.SI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="OPT" desc="Avoid unnecessary casting" id="OPT.UNC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB" desc="Ensure that exactly one type has the same name as the file name" id="PB.OCSF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Place &quot;default&quot; as the last case of the &quot;switch&quot; statement" id="PB.PDCL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB" desc="Provide &quot;default:&quot; for each &quot;switch&quot; statement" id="PB.PDS" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not call the 'next' method from the 'hasNext' method of an Iterator" id="PB.API.HNCN" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not use &quot;URL&quot; objects in &quot;Collections&quot; or &quot;Maps&quot;" id="PB.API.IUMS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not call 'setSize()' in 'ComponentListener.componentResized()'" id="PB.API.DNCSS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not create an empty JarFile entry or an empty ZipFile entry" id="PB.API.EJF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid calling 'equals(null)'" id="PB.API.EQNL" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Ensure that all types which are used as keys in Sets and Maps override the 'equals()' and 'hashCode()' methods" id="PB.API.KOEH" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not overload the 'finalize()' method" id="PB.API.OF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using &quot;.&quot; as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'" id="PB.API.REP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Do not pass a 'char' to the 'StringBuffer(int)' constructor" id="PB.API.SBCC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="PB.API.UNI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.API" desc="Avoid using the 'equals()' and 'hashCode()' methods of &quot;java.net.URL&quot;" id="PB.API.URL" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.API" desc="Update values which may be using to compare with vendor properties" id="PB.API.VENDOR" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="PB.CUB.ARCF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not exit &quot;finally&quot; blocks abruptly" id="PB.CUB.ATSF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use the &quot;+&quot; string concatenation operator to concatenate numbers; use it only to add numbers" id="PB.CUB.DCP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid erroneously placing statements outside blocks" id="PB.CUB.EBI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid overloading varargs methods" id="PB.CUB.OVAM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use &quot;char&quot; arrays in &quot;String&quot; concatenations" id="PB.CUB.SAC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Do not use '==' or '!=' to compare objects" id="PB.CUB.UEIC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid dangling &quot;else&quot; statements" id="PB.CUB.ADE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid confusing assignments to constructor arguments" id="PB.CUB.AWP" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Avoid improper concatenation of characters with numbers" id="PB.CUB.CNVC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.CUB" desc="Use the method name 'main()' only for the entry point method" id="PB.CUB.MAIN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not call 'equals()' methods that always return false" id="PB.LOGIC.EQUS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid calling 'equals()' with same object" id="PB.LOGIC.ESO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid infinite recursive method calls" id="PB.LOGIC.FLRC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Do not increment or decrement on the same variable over multiple nested &quot;for&quot; loop statements" id="PB.LOGIC.JI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" id="PB.LOGIC.OAMC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid bugs in the usage of loop variables" id="PB.LOGIC.INDEX" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.LOGIC" desc="Avoid out of range comparisons" id="PB.LOGIC.OOR" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid calculations which result in overflow or NaN" id="PB.NUM.ICO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not assign the result of an integer division to a floating point variable" id="PB.NUM.IDCD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid comparisons to Double.NaN or Float.NaN" id="PB.NUM.NAN" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not initialize array dimensions with negative numbers" id="PB.NUM.NIA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not pass floating point values to the 'BigDecimal' constructor" id="PB.NUM.BBDCC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="PB.NUM.BSA" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not cast primitive data types to lower precision" id="PB.NUM.CLP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not compare floating point types" id="PB.NUM.DCF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Do not use floating point variables as loop indices" id="PB.NUM.FPLI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.NUM" desc="Avoid casting the result of an integer multiplication to &quot;long&quot;" id="PB.NUM.IMOF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Do not add a collection to itself" id="PB.RE.ACTI" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Check whether or not &quot;readLine()&quot; returned null before dereferencing the return value" id="PB.RE.IDRL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid using methods add() from JLayer class" id="PB.RE.JLAY" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="When used HttpURLConnection always check return value from the getResponseCode() methods before call getInputStream()" id="PB.RE.RCODE" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid modifying fixed-size Collections" id="PB.RE.AMFSL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Avoid possible ArrayStoreExceptions" id="PB.RE.ASE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.RE" desc="Ensure 'Iterator.next()' method implementations throw 'NoSuchElementException'" id="PB.RE.CTNSE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid assignment within a condition" id="PB.TYPO.ASI" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure that arguments passed to Java wrapper classes do not contain typos" id="PB.TYPO.WT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Ensure &quot;switch&quot; statements do not contain typos" id="PB.TYPO.TLS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Avoid assigning same variable in the fall-through switch case" id="PB.TYPO.DAV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.TYPO" desc="Do not give methods and fields the same name as the enclosing class or each other" id="PB.TYPO.NAMING" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" id="PB.USC.UIF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid increment and decrement statements which have no effect" id="PB.USC.OI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.USC" desc="Do not use the unary operator '+'" id="PB.USC.UNARY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid empty statements" id="PB.USC.AES" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="PB.USC" desc="Avoid self assignments/initializations to fields and/or local variables" id="PB.USC.SAFL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property names" id="PROPS.DUPN" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property names" id="PROPS.EMN" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing arguments in property values" id="PROPS.IARG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid incomplete property entries" id="PROPS.ICK" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid unmatched property entries in resources with different locales" id="PROPS.MENTRY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid duplicated property values" id="PROPS.DUPV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid empty property values" id="PROPS.EMV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Follow the limit for number of property entries" id="PROPS.FM" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Avoid misusing the line continuation character '\'" id="PROPS.IVCC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;" authUrg="0;" cat="PROPS" desc="Ensure that property entries are localized correctly" id="PROPS.TENTRY" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid classes that implement 'Externalizable' but do not define a no-argument constructor" id="SERIAL.ENNAC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure the return type of 'readResolve()' and 'writeReplace()' methods are 'java.lang.Object'" id="SERIAL.MRWD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure outer class is serializable if its inner class is serializable" id="SERIAL.OC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="SERIAL.ROWO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Avoid serializable classes that extend a superclass without a zero-argument constructor" id="SERIAL.SNNAC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure Serializable classes are correct" id="SERIAL.NSFSC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="SERIAL.SPF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SERIAL" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="SERIAL.RWAF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="SERVLET" desc="Ensure that all servlets have a corresponding mapping in 'web.xml' files" id="SERVLET.SCM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="SPRING" desc="Follow configuration class conventions" id="SPRING.ATCFG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid accessing a database from Action Classes" id="STRUTS.ACDA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Avoid defining multiple form beans with the same name in 'struts-config.xml' files" id="STRUTS.MFBSN" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="STRUTS.MLVP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure that the @path attribute of '&lt;action>' and '&lt;forward>' elements begins with '/' in 'struts-config.xml' files" id="STRUTS.PFS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;" authUrg="0;" cat="STRUTS" desc="Ensure that the 'scope' attribute is set to either &quot;request&quot; or &quot;session&quot; for actions and exceptions in 'struts-config.xml' files" id="STRUTS.RSS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="TRS.CSFS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Release Locks in a &quot;finally&quot; block" id="TRS.RLF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on constant Strings" id="TRS.SCS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Manually synchronize on 'synchronized' collections when iterating over them" id="TRS.SSCI" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="TRS.UWIL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="TRS.AUTG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="TRS.CSTART" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="TRS.SOPF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="TRS.THRD" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="TRS.TSHL" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Make lazy initializations thread-safe" id="TRS.ILI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope" id="TRS.NSYN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="TRS" desc="Do not synchronize on non-&quot;final&quot; fields since doing so makes it difficult to guarantee mutual exclusion" id="TRS.SOUF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Synchronize access to &quot;static&quot; SimpleDataFormats" id="TRS.SSDF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Do not start a thread without specifying a 'run()' method" id="TRS.UT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="TRS" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="TRS.UWNA" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty static and non-static initializers" id="UC.AESTAT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unused labels" id="UC.AUL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid collection objects that are never read" id="UC.AURCO" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid local variables that are never read" id="UC.AURV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid duplicate code in 'if' branches" id="UC.DIEB" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;" authUrg="0;" cat="UC" desc="Do not explicitly &quot;import&quot; the java.lang.* &quot;package&quot;" id="UC.DIL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty &quot;finalize()&quot; methods" id="UC.EF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid empty &quot;synchronized&quot; statements" id="UC.SNE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;" authUrg="0;" cat="UC" desc="Avoid unnecessary 'if' statements" id="UC.UCIF" sev="3" total="0" />
         </RulesList>
         <SeverityList>
            <Severity authTot="1;" authUrg="1;" id="3" total="1" />
         </SeverityList>
      </Rules>
      
  <Supps />

      
  <StdViols>
    <StdViol msg="Compilation unit should be placed inside a non-default package" ln="1" locFile="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" auth="Roller Wang" rule="CODSTA.ORG.UNDPN" lnHash="-640264574" pkg="" rule.header="Ensure all types have a non default package name" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" revTime="0" lang="java" violId="99f99559-9868-3252-8912-82e3d109c6c9" locEndPos="0" urgent="true" locEndLn="1" goals="1," rev="330c823b10d045b5307308e81e887fbad50ea376" locStartln="1" sev="3" locRef="1" tool="jtest" lineHash="-640264574" revComm="" unbViolId="1f23b551-2cb6-354b-a763-c9b3864138ff" locType="sr" hash="1741334343" />
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="1">
            <Project id="com.parasoft:project-with-default-package" name="com.parasoft:project-with-default-package" supp="0" total="1">
               <Res name="src" supp="0" total="1">
                  <Res name="main" supp="0" total="1">
                     <Res name="java" supp="0" total="1">
                        <Res loc="/com.parasoft:project-with-default-package/src/main/java/Calculator.java" locRef="1" locType="sr" name="Calculator.java" supp="0" total="1" />
                        <Res name="com" supp="0" total="0">
                           <Res name="parasoft" supp="0" total="0">
                              <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/Convertor.java" locRef="2" locType="sr" name="Convertor.java" supp="0" total="0" />
                              <Res name="another" supp="0" total="0">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/another/Convertor.java" locRef="3" locType="sr" name="Convertor.java" supp="0" total="0" />
                              </Res>
                              <Res name="interfaces" supp="0" total="0">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces/IConvertor.java" locRef="4" locType="sr" name="IConvertor.java" supp="0" total="0" />
                              </Res>
                              <Res name="interfaces2" supp="0" total="0">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/interfaces2/ICalculator.java" locRef="5" locType="sr" name="ICalculator.java" supp="0" total="0" />
                              </Res>
                              <Res name="nested" supp="0" total="0">
                                 <Res loc="/com.parasoft:project-with-default-package/src/main/java/com/parasoft/nested/PhoneFactory.java" locRef="6" locType="sr" name="PhoneFactory.java" supp="0" total="0" />
                              </Res>
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>
